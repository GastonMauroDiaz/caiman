% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/group_nondiffuse.R
\name{colorfulness}
\alias{colorfulness}
\alias{colorfulness,CanopyPhoto-method}
\title{Quantify the colorfulness of an image.}
\usage{
colorfulness(x, mask = NULL, plot = FALSE, returnRaster = FALSE)

\S4method{colorfulness}{CanopyPhoto}(x, mask = NULL, plot = FALSE, returnRaster = FALSE)
}
\arguments{
\item{x}{\code{\linkS4class{CanopyPhoto}}. Is the image that you want to know
how colorful is.}

\item{mask}{\linkS4class{BinImage}. The default value \code{NULL} means that
all the pixels will be taking into account in the computations. If you
provide a \linkS4class{BinImage}, it must have the same extent and
resolution of \code{x}. All pixels from the image covered by pixels of the
mask with value \code{1} will be taking into account in the computations.}

\item{plot}{logical. By default it is \code{FALSE}, if \code{TRUE} a plot
will be printed. See Details.}

\item{returnRaster}{logical. By default it is \code{FALSE}, if \code{TRUE}
this method returns the raster that you can see when plot is \code{TRUE}.
See Details.}
}
\value{
numeric or \code{\linkS4class{Raster}}.
}
\description{
Quantify the colorfulness of a sRGB image using a bidimensional
  space form by the green/red and the blue/yellow axes of the CIE
  \emph{L*a*b*} space, in other words, the lightness is excluded. In this
  bidimensional space, the algorithm creates a square with sides of 200
  and centered in 0. Next, it compute how much area of this square is covered
  by the image pixels. The index is the percentage of cover.
}
\details{
When you request a plot with argument \code{plot = TRUE}, the
  colorfulness is returned but also a plot is sent to the active graphics
  Device. The plot shows the color of the image represented in a
  bidimensional space made by the axis \emph{a} and \emph{b} of the CIE
  \emph{L*a*b* space}.
}
\examples{
x <- loadPhoto()
x <- normalize(x, 0, 255)
z <- makeZimage(ncol(x), lensPolyCoef(c(0.6427, 0.0346, -0.024491)))
m <- doMask(z, alim = asAngle(c(0, 10)), zlim = asAngle(c(30, 40)))
m <- doMask(z)
colorfulness(x, m, TRUE)
r <- colorfulness(x, m, TRUE, TRUE)
plotRGB(r)
}
\seealso{
\code{\link{normalize}}, \code{\link{outOfDR}}.
}
