% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/group_base_subgroup_segmentation.R
\name{makePolarGrid}
\alias{makePolarGrid}
\alias{makePolarGrid,ZenithImage-method}
\title{Make a grid of segments.}
\usage{
makePolarGrid(
  z,
  a = makeAimage(z),
  angleWidth = asAngle(1),
  sequential = FALSE
)

\S4method{makePolarGrid}{ZenithImage}(
  z,
  a = makeAimage(z),
  angleWidth = asAngle(1),
  sequential = FALSE
)
}
\arguments{
\item{z}{\code{\linkS4class{ZenithImage}}.}

\item{a}{\code{\linkS4class{AzimuthImage}}.}

\item{angleWidth}{\code{\linkS4class{Angle}}. It must be 30, 15, 10, 7.5, 6,
5, 3.75, 3, 2.5, 1.875, 1 or 0.5 degrees. This values could divide both
0-360 and 0-90 into a whole number of segments.}

\item{sequential}{logical. If it is \code{TRUE} the segments are labeled with
sequential numbers. By default (\code{FALSE}), labeling numbers are not
sequential (see Details).}
}
\value{
\code{\linkS4class{PolarSegmentation}}.
}
\description{
Partitioning the hemisphere into segments of equal angular
  resolution for both zenith and azimuth angles.
}
\details{
Intersecting rings with sectors makes a grid in which each segment
is a portion of the hemisphere. Each pixel of the grid is labeled with an ID
that codify both ring and sector ID. For example, a grid with a regular
interval of 1 degree has segment from 1001 to 360090. This numbers are
calculated with: \code{sectorID x 1000 + ringsID}, where \code{sectorID} is
the ID number of the sector and \code{ringsID} is the ID number of the ring.
}
\examples{
z <- makeZimage(480, lensPolyCoef())
a <- makeAimage(z)
g <- makePolarGrid(z, a, angleWidth = asAngle(10))
g
head(levels(g)[[1]])
plot(g)
}
\seealso{
\code{\link{makeZimage}}, \code{\link{makeAimage}}, \code{\link{makePolarSectors}}, \code{\link{makeRings}}.
}
