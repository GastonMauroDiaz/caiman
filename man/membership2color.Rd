% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AAperPixelProcessingFunctions.R
\docType{methods}
\name{membership2color}
\alias{membership2color}
\alias{membership2color,color-method}
\alias{membership2color,RasterStackBrick-method}
\title{Compute the membership value to a color.}
\usage{
membership2color(x, ...)

\S4method{membership2color}{color}(x, targetColor, sigma = NULL, ...)

\S4method{membership2color}{RasterStackBrick}(x, targetColor, sigma = NULL,
  ...)
}
\arguments{
\item{x}{\linkS4class{color} or \code{\linkS4class{RasterStack}} or \code{\linkS4class{RasterBrick}}.}

\item{...}{Additional arguments as for \code{\link[raster]{writeRaster}}.}

\item{targetColor}{\linkS4class{color}.}

\item{sigma}{numeric. Default \code{NULL} means the algorithms will estimate it.}
}
\value{
Numeric or \code{\linkS4class{RasterLayer}}.
}
\description{
This algorithm models the degree of membership to a color with
  two Gaussian membership functions and the layer \emph{A} and \emph{B} of the \emph{CIE L*a*b*}
  color space. The lightness information is omitted.
}
\examples{
# for circular hemispherical photos
x <- loadPhoto()
x <- normalize(x, 0, 255)
xe <- enhanceHP(x)
plot(xe)

z <- makeZimage(ncol(x), lensPolyCoef(c(0.6427, 0.0346, -0.024491)))

m <- doMask(z, zlim = asAngle(c(30,60)), alim = asAngle(c(0, 45)))
# mask affects the result but does not crop it (see Details).
plot(enhanceHP(x, mask = m))


# for fullframe hemispherical photos

path <- system.file("external/DSC_2881.jpg", package="caiman")
x <- loadPhoto(path)
## declaring it as a fullframe
fisheye(x) <- newFishEye(TRUE, TRUE, TRUE)

x <- normalize(x, 0, 255)

lens <- lensPolyCoef(c(1.13, 0.00798, -0.138))
diameter <- calcDiameter(x, lens)
r <- makeRimage(diameter, lens)
z <- makeZimage(r, lens)

xe <- enhanceHP(x, z = z)
plot(xe)

## Using a mask for fullframe photos is tricky (see Details).
m <- doMask(x, z)
m <- doMask(z, previousMask = m, zlim = asAngle(c(30, 40)),
                                                      alim = asAngle(c(20,130)))
plot(m)
plot(enhanceHP(x, z = z, mask = m) - enhanceHP(x, z = z))
}
\seealso{
\code{\link{normalize}}, \code{\link{enhanceHP}}.
}
